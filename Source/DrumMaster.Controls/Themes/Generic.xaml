<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:con="clr-namespace:Restless.App.DrumMaster.Controls">

    <!-- ############################# -->
    <!-- VALUES USED IN VARIOUS PLACES -->
    <!-- ############################# -->
    <con:StepPlayFrequency x:Key="StepFrequencyNone">None</con:StepPlayFrequency>
    <con:StepPlayFrequency x:Key="StepFrequencyEvery">EveryPass</con:StepPlayFrequency>
    <con:StepPlayFrequency x:Key="StepFrequencyOdd">OddPassOnly</con:StepPlayFrequency>
    <con:StepPlayFrequency x:Key="StepFrequencyEven">EvenPassOnly</con:StepPlayFrequency>
    
    <!--<Thickness x:Key="TrackControlBorderThickness">1</Thickness>
    <Thickness x:Key="TrackControlBorderMargin">4</Thickness>
    <Thickness x:Key="TrackControlBorderPadding">6</Thickness>-->

    <!--<GridLength x:Key="TrackLeftColumnWidth">280</GridLength>-->
    <!-- Must be Thickness(left)+Margin(left)+Padding(left) more than TrackLeftColumnWidth -->
    <!--<GridLength x:Key="HeaderLeftColumnWidth">291</GridLength>-->

    <!-- ############################# -->
    <!-- BRUSH DEFINITIONS             -->
    <!-- ############################# -->
    <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.00,0.00" EndPoint="1.00,1.00">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF0060CE" Offset="0.000"/>
                <GradientStop Color="#C000B6FF" Offset="1.000"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TrackBorderBrush" Color="LightGray"/>

    <SolidColorBrush x:Key="ButtonBrushOver" Color="#90B9DFFF"/>
    <SolidColorBrush x:Key="ButtonBrushPressed" Color="#FFB9DFFF"/>
    <SolidColorBrush x:Key="ButtonBrushBorder" Color="#FF9ADFFF"/>
    
    <!-- ############################# -->
    <!-- BUTTON TEMPLATE / STYLE       -->
    <!-- ############################# -->
    <ControlTemplate x:Key="FlatButtonTemplate" TargetType="ButtonBase">
        <Border 
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            Padding="{TemplateBinding Padding}"
            CornerRadius="3"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                TextElement.Foreground="{TemplateBinding Foreground}"
                TextElement.FontFamily="{TemplateBinding FontFamily}"
                TextElement.FontSize="{TemplateBinding FontSize}"
                TextElement.FontStretch="{TemplateBinding FontStretch}"
                TextElement.FontWeight="{TemplateBinding FontWeight}"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="ButtonBaseFlat" TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template" Value="{StaticResource FlatButtonTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBrushOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBrushPressed}"/>
                <Setter Property="Padding" Value="4,4,2,2"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.65"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleButtonFlat" TargetType="ToggleButton" BasedOn="{StaticResource ButtonBaseFlat}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBrushBorder}"/>
                <Setter Property="BorderThickness" Value="2,2,1,1"/>
                <Setter Property="Background" Value="{StaticResource ButtonBrushPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ############################# -->
    <!-- SLIDER TEMPLATES / STYLE      -->
    <!-- ############################# -->
    <Style x:Key="SliderFocusVisualStyle" >
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="FocusStyle" StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent"
                           Stroke="#99029cc7" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainSliderRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MainSliderThumbStyle" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!-- was: 26, 26, 13 #8034b4e3 #ff34b4e3 -->
                        <Border Name="outerBorder"
                            Background="#801D6FB4"
                            BorderBrush="#801D6FB4"
                            Height="18" Width="22" Opacity="1" BorderThickness="2" CornerRadius="1"/>
                        <!-- was: 10, 10, 5-->
                        <Border Name="innerBorder"
                            Background="#FF1D6FB4"
                            BorderBrush="#FF1D6FB4"
                            Height="8" Width="8" CornerRadius="4" Opacity="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="#BB1D6FB4" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="outerBorder" Property="Background" Value="#55ACACAC" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="#55ACACAC" />
                            <Setter TargetName="innerBorder" Property="Width" Value="4" />
                            <Setter TargetName="innerBorder" Property="Height" Value="4" />
                            <Setter TargetName="innerBorder" Property="CornerRadius" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MainVerticalSliderTemplate" TargetType="Slider">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TickBar 
                x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
            <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="LightGray"
                HorizontalAlignment="Center" Width="4" />
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource MainSliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MainSliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource MainSliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="LightGray" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MainHorizontalSliderTemplate" TargetType="Slider">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
            <Border x:Name="TrackBackground"
                Grid.Row="1"
                Margin="10,0"
                BorderThickness="2"
                BorderBrush="LightGray"
                VerticalAlignment="Center" Height="4" />
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MainSliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MainSliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource MainSliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="LightGray" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MainSliderStyle" TargetType="Slider">
        <Setter Property="FocusVisualStyle" Value="{StaticResource SliderFocusVisualStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource MainHorizontalSliderTemplate}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource MainVerticalSliderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BoxVolumeSliderThumbStyle" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Name="innerBorder"
                        Background="#FF1D6FB4"
                        Height="5" Width="22" 
                        CornerRadius="1" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="innerBorder" Property="Background" Value="#FF0045D8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="innerBorder" Property="Width" Value="16" />
                            <Setter TargetName="innerBorder" Property="Height" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="BoxVolumeSliderTemplate" TargetType="Slider">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
            </Grid.ColumnDefinitions>
            <Border
                Margin="0,1"
                BorderThickness="2"
                BorderBrush="{TemplateBinding Background}"
                HorizontalAlignment="Center" Width="4" />
            <Track x:Name="PART_Track">
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource BoxVolumeSliderThumbStyle}" />
                </Track.Thumb>
            </Track>
        </Grid>

    </ControlTemplate>

    <Style x:Key="BoxVolumeSliderStyle" TargetType="Slider">
        <Setter Property="FocusVisualStyle" Value="{StaticResource SliderFocusVisualStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="Template" Value="{StaticResource BoxVolumeSliderTemplate}"/>
    </Style>
    

    <!-- ################################ -->
    <!-- TRACK CONTAINER TEMPLATE / STYLE -->
    <!-- ################################ -->
    <Style x:Key="TextBlockCounter" TargetType="TextBlock">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="Foreground" Value="DarkBlue"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <ControlTemplate x:Key="TrackContainerControlTemplate" TargetType="{x:Type con:TrackContainer}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <DockPanel>
                <!-- Header -->
                <Border DockPanel.Dock="Top" Background="{StaticResource HeaderBrush}" Padding="6">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!-- Minimize / maximize button -->
                        <Button
                            Grid.Column="0"
                            Style="{StaticResource ButtonBaseFlat}" 
                            Command="{Binding Commands[ToggleExpanded], RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{TemplateBinding ActiveExpandedStateImageSource}" />
                        </Button>
                        <!-- Close button -->
                        <Button
                            Grid.Column="1"
                            Margin="7,0"
                            Style="{StaticResource ButtonBaseFlat}" 
                            Command="{Binding Commands[Close], RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{TemplateBinding CloseImageSource}" />
                        </Button>
                        <!-- Track caption -->
                        <TextBlock
                            Grid.Column="2"
                            FontSize="11.5"
                            Foreground="White"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding DisplayName}"/>
                    </Grid>
                </Border>

                <!-- Main panel that may be displayed or collapsed -->
                <DockPanel DockPanel.Dock="Top" x:Name="PART_TRACK_LIST">
                    <!-- Track Controllers-->
                    <Grid DockPanel.Dock="Top" Margin="0,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="66"/>
                            <ColumnDefinition Width="66"/>
                            <ColumnDefinition Width="66"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="66"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseFlat}">
                                <!--<Setter Property="VerticalAlignment" Value="Bottom"/>
                                <Setter Property="Height" Value="48"/>-->
                            </Style>
                            <Style TargetType="Slider" BasedOn="{StaticResource MainSliderStyle}">
                                <Setter Property="IsSnapToTickEnabled" Value="True"/>
                                <Setter Property="TickFrequency" Value="1"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Orientation" Value="Horizontal"/>
                                <!--<Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>-->
                            </Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Margin" Value="2,0"/>
                            </Style>
                            <Style x:Key="TextBlockLabel" TargetType="TextBlock">
                                <Setter Property="Foreground" Value="DarkBlue"/>
                            </Style>
                            <Style x:Key="TextBlockValue" TargetType="TextBlock">
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter Property="Margin" Value="4,0"/>
                            </Style>
                        </Grid.Resources>
                        
                        <!-- Add button. Adds a new track -->
                        <Button Grid.Column="0" Command="{Binding Commands[AddTrack], RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{Binding AddTrackImageSource, RelativeSource={RelativeSource TemplatedParent}}" Height="32"/>
                        </Button>

                        <!-- Play button. Plays or stops -->
                        <Button Grid.Column="1" Command="{Binding Commands[Play], RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{Binding ActivePlayImageSource, RelativeSource={RelativeSource TemplatedParent}}" Height="32" Margin="2,0"/>
                        </Button>

                        <!-- Mute button. Mutes or unmutes the whole layout -->
                        <Button Grid.Column="2" Command="{Binding Commands[ToggleMute], RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{Binding ActiveMutedImageSource, RelativeSource={RelativeSource TemplatedParent}}" Height="32" Margin="2,0"/>
                        </Button>

                        <!--<Border Grid.Column="3" Width="2" BorderThickness="1" BorderBrush="{StaticResource ButtonBrushPressed}"/>-->

                        <!-- Volume adjustment slider -->
                        <StackPanel Grid.Column="4">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource TextBlockLabel}" Text="{Binding VolumeText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <TextBlock Style="{StaticResource TextBlockValue}" Text="{Binding VolumeDecibelText, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                            <Slider
                                Minimum="{Binding MinVolume, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" 
                                Maximum="{Binding MaxVolume, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                IsSnapToTickEnabled="False"
                                Value="{Binding Volume, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>

                        <!-- Tempo adjustment slider -->
                        <StackPanel Grid.Column="5">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource TextBlockLabel}" Text="{Binding TempoText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <TextBlock Style="{StaticResource TextBlockValue}" Text="{Binding Tempo, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                            <Slider
                                Minimum="{Binding MinTempo, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Maximum="{Binding MaxTempo, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Value="{Binding Tempo, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>

                        <!-- Number of beats adjustment slider-->
                        <StackPanel Grid.Column="6">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource TextBlockLabel}" Text="{Binding BeatsText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <TextBlock Style="{StaticResource TextBlockValue}" Text="{Binding Beats, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                            <Slider 
                                Minimum="{Binding MinBeats, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Maximum="{Binding MaxBeats, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Value="{Binding Beats, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>

                        <!-- Number of steps per beat adjustment slider -->
                        <StackPanel Grid.Column="7">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource TextBlockLabel}" Text="{Binding StepsPerBeatText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <TextBlock Style="{StaticResource TextBlockValue}" Text="{Binding StepsPerBeat, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                            <Slider
                                Minimum="{Binding MinStepsPerBeat, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Maximum="{Binding MaxStepsPerBeat, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Value="{Binding StepsPerBeat, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>

                        <!-- Box size adjustment slider -->
                        <StackPanel Grid.Column="8">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource TextBlockLabel}" Text="{Binding BoxSizeText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <TextBlock Style="{StaticResource TextBlockValue}" Text="{Binding BoxSize, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                            <Slider 
                                Minimum="{Binding MinBoxSize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Maximum="{Binding MaxBoxSize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                Value="{Binding BoxSize, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>

                        <ToggleButton Grid.Column="9" Margin="3" Style="{StaticResource ToggleButtonFlat}" IsChecked="{Binding IsMetronomeActive, RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid>
                                <Image Source="{Binding MetronomeImageSource, RelativeSource={RelativeSource TemplatedParent}}" Height="28"/>
                            </Grid>
                        </ToggleButton>

                    </Grid>

                    <Separator DockPanel.Dock="Top"/>

                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="302" MaxWidth="502"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock 
                                Grid.Column="0"
                                Style="{StaticResource TextBlockCounter}" 
                                Text="{Binding PassText, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <TextBlock 
                                Grid.Column="1"
                                Style="{StaticResource TextBlockCounter}" 
                                Text="{Binding CounterText, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>

                        <!-- Header boxes for the track -->
                        <con:TrackBoxContainer 
                            x:Name="PART_HEADER_BOXES"
                            Margin="4"
                            Padding="4"
                            Grid.Row="0" Grid.Column="2" 
                            TotalSteps="{Binding TotalSteps, RelativeSource={RelativeSource TemplatedParent}}" 
                            BoxSize="{Binding BoxSize, RelativeSource={RelativeSource TemplatedParent}}" />

                        <ItemsControl HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding TrackControllers, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <GridSplitter Grid.Column="1" Grid.RowSpan="2" Width="4" HorizontalAlignment="Center" VerticalAlignment="Stretch" />
                        <ItemsControl Grid.Row="1" Grid.Column="2" ItemsSource="{Binding TrackBoxes, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </DockPanel>
            </DockPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Visibility" TargetName="PART_TRACK_LIST" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style TargetType="{x:Type con:TrackContainer}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource TrackContainerControlTemplate}"/>
    </Style>

    <!-- ######################################## -->
    <!-- TRACK CONTROLLER TEMPLATE / STYLE        -->
    <!-- ######################################## -->
    <ControlTemplate x:Key="TrackControllerTemplateMain" TargetType="{x:Type con:TrackController}">
        <Border
            Padding="{TemplateBinding Padding}"
            BorderThickness="{TemplateBinding BorderThickness}"
            BorderBrush="{TemplateBinding BorderBrush}">

            <StackPanel Margin="0,2,0,0">
                <!-- Topmost controls -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="28"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="28"/>
                        <ColumnDefinition Width="28"/>
                        <ColumnDefinition Width="28"/>
                    </Grid.ColumnDefinitions>

                    <!-- Expand / collapse track -->
                    <Button
                        Grid.Column="0"
                        Style="{StaticResource ButtonBaseFlat}"
                        HorizontalAlignment="Left"
                        Command="{Binding Commands[ToggleExpanded], RelativeSource={RelativeSource TemplatedParent}}">
                        <Image Source="{TemplateBinding ActiveExpandedStateImageSource}" Height="18"  Width="18"/>
                    </Button>

                    <!-- Instrument selection for the track -->
                    <ComboBox
                        Grid.Column="1"
                        ItemsSource="{Binding AudioPieces, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectedItem="{Binding Piece, RelativeSource={RelativeSource TemplatedParent}}" />

                    <!-- Shift all beats on the track to the left -->
                    <Button
                        Grid.Column="2"
                        Style="{StaticResource ButtonBaseFlat}" 
                        Command="{Binding Commands[ShiftLeft], RelativeSource={RelativeSource TemplatedParent}}"
                        ToolTip="{TemplateBinding ShiftLeftToolTip}">
                        <Image Source="{TemplateBinding ShiftLeftImageSource}" Height="14" />
                    </Button>

                    <!-- Shift all beats on the track to the right -->
                    <Button
                        Grid.Column="3"
                        Style="{StaticResource ButtonBaseFlat}" 
                        Command="{Binding Commands[ShiftRight], RelativeSource={RelativeSource TemplatedParent}}"
                        ToolTip="{TemplateBinding ShiftRightToolTip}">
                        <Image Source="{TemplateBinding ShiftRightImageSource}" Height="14" />
                    </Button>

                    <!-- Toggle mute for the track -->
                    <Button
                        Grid.Column="4"
                        Style="{StaticResource ButtonBaseFlat}" 
                        Command="{Binding Commands[ToggleMute], RelativeSource={RelativeSource TemplatedParent}}">
                        <Image Source="{TemplateBinding ActiveMutedImageSource}" />
                    </Button>
                </Grid>

                <Grid x:Name="PART_GRID_MAIN" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="42"/>
                        <ColumnDefinition Width="56"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" x:Name="PART_ROW_VOL"/>
                        <RowDefinition Height="0" x:Name="PART_ROW_PAN"/>
                        <RowDefinition Height="0" x:Name="PART_ROW_PITCH"/>
                    </Grid.RowDefinitions>
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="View/hide beat volume" Command="{Binding Commands[ToggleBeatVolume], RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Separator/>
                            <MenuItem Header="Remove Track" Command="{Binding Commands[RemoveTrack], RelativeSource={RelativeSource TemplatedParent}}">
                                <MenuItem.Icon>
                                    <Image Source="/DrumMaster.Controls;component/Resources/Images/Image.Remove.64.png" Height="18" Width="18"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Grid.ContextMenu>

                    <!-- Volume -->
                    <TextBlock
                        Grid.Row="0" Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{TemplateBinding ShortVolumeText}"/>
                    <TextBlock 
                        Grid.Row="0" Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{TemplateBinding VolumeDecibelText}"/>
                    <Slider
                        Grid.Row="0"  Grid.Column="2"
                        Style="{StaticResource MainSliderStyle}"
                        Minimum="{Binding MinVolume, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" 
                        Maximum="{Binding MaxVolume, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                        Value="{Binding Volume, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"/>

                    <!-- Panning -->
                    <TextBlock
                        Grid.Row="1" Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="Pan"/>
                    <TextBlock 
                        Grid.Row="1" Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{TemplateBinding PanningText}"/>
                    <Slider
                        Grid.Row="1"  Grid.Column="2"
                        Style="{StaticResource MainSliderStyle}"
                        Minimum="{Binding MinPanning, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" 
                        Maximum="{Binding MaxPanning, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                        Value="{Binding Panning, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />

                    <!-- Pitch -->
                    <TextBlock
                        Grid.Row="2" Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="Pitch"/>
                    <TextBlock 
                        Grid.Row="2" Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Pitch, RelativeSource={RelativeSource TemplatedParent}, StringFormat=N1}"/>
                    <Slider
                        Grid.Row="2" Grid.Column="2"
                        Style="{StaticResource MainSliderStyle}"
                        Minimum="{Binding MinPitch, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" 
                        Maximum="{Binding MaxPitch, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                        Value="{Binding Pitch, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" />

                </Grid>
            </StackPanel>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPanningEnabled" Value="True">
                <Setter Property="Height" TargetName="PART_ROW_PAN" Value="Auto"/>
            </Trigger>
            <Trigger Property="IsPitchEnabled" Value="True">
                <Setter Property="Height" TargetName="PART_ROW_PITCH" Value="Auto"/>
            </Trigger>

            <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Height" TargetName="PART_ROW_VOL" Value="0"/>
                <Setter Property="Height" TargetName="PART_ROW_PAN" Value="0"/>
                <Setter Property="Height" TargetName="PART_ROW_PITCH" Value="0"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

























    <Style TargetType="{x:Type con:TrackController}">
        <Setter Property="Template" Value="{StaticResource TrackControllerTemplateMain}"/>
    </Style>

    <!-- ######################################## -->
    <!-- TRACK BOX CONTAINER TEMPLATE / STYLE     -->
    <!-- ######################################## -->
    <Style TargetType="{x:Type con:TrackBoxContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type con:TrackBoxContainer}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                        <!-- Gets updated in code-->
                        <Grid x:Name="PART_HOST_GRID" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ############################# -->
    <!-- TRACK BOX TEMPLATE / STYLE    -->
    <!-- ############################# -->
    <ControlTemplate x:Key="TrackBoxHeaderControlTemplate" TargetType="{x:Type con:TrackBox}">
        <Border x:Name="PART_BORDER" BorderBrush="DarkBlue" BorderThickness="2" Background="#FFE8E8E8" Margin="3" CornerRadius="1">
            <TextBlock
                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                Foreground="Black"
                FontWeight="Bold"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="PlayFrequency" Value="EveryPass">
                <Setter Property="Background" TargetName="PART_BORDER" Value="{Binding SelectedBackgroundBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StepButtonStyle" TargetType="Button" >
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template" Value="{StaticResource FlatButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="TrackBoxStepControlTemplate" TargetType="{x:Type con:TrackBox}">
         <Border x:Name="PART_BORDER" BorderBrush="DarkBlue" BorderThickness="2" Background="Transparent" Margin="3" CornerRadius="0">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="Border">
                        <Setter Property="Height" Value="4"/>
                        <Setter Property="Width" Value="4"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Foreground" Value="DarkGray"/>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                </Grid.Resources>
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Header="Every pass"
                            Command="{Binding Commands[SwitchFrequency], RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{StaticResource StepFrequencyEvery}"/>

                        <MenuItem
                            Header="Odd pass"
                            Command="{Binding Commands[SwitchFrequency], RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{StaticResource StepFrequencyOdd}">
                            <MenuItem.Icon>
                                <Image Source="/DrumMaster.Controls;component/Resources/Images/Image.Beat.Odd.48.png" Height="18" Width="18"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Header="Even pass"
                            Command="{Binding Commands[SwitchFrequency], RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{StaticResource StepFrequencyEven}">
                            <MenuItem.Icon>
                                <Image Source="/DrumMaster.Controls;component/Resources/Images/Image.Beat.Even.48.png" Height="18" Width="18"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator/>
                        
                        <MenuItem
                            Header="Off"
                            Command="{Binding Commands[SwitchFrequency], RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{StaticResource StepFrequencyNone}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                
                <!-- Button to toggle selection off / on-->
                <Button Style="{StaticResource StepButtonStyle}" Command="{Binding Commands[ToggleIsSelected], RelativeSource={RelativeSource TemplatedParent}}">
                    <Image Source="/DrumMaster.Controls;component/Resources/Images/Image.Step.48.png" />
                </Button>
                <!-- Slider to adjust the volume for this box -->
                <Slider 
                    x:Name="PART_VOL"
                    Style="{StaticResource BoxVolumeSliderStyle}"
                    Minimum="{Binding MinVolumeBias, RelativeSource={RelativeSource TemplatedParent}}"
                    Maximum="{Binding MaxVolumeBias, RelativeSource={RelativeSource TemplatedParent}}"
                    Value="{Binding VolumeBias, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="Collapsed"/>

                <!-- Indicator when the beat is for odd numbered pass only -->
                <Border
                    x:Name="PART_ODD"
                    HorizontalAlignment="Left"
                    Background="Red"
                    Width="{Binding ActualWidth,ElementName=PART_BORDER,Converter={con:DoubleToPercentageDoubleConverter},ConverterParameter=0.10}"
                    Height="{Binding Width,RelativeSource={RelativeSource Self}}"/>

                <!-- Indicator when the beat is for even numbered pass only -->
                <Border 
                    x:Name="PART_EVEN"
                    HorizontalAlignment="Right"
                    Background="Blue"
                    Width="{Binding ActualWidth,ElementName=PART_BORDER,Converter={con:DoubleToPercentageDoubleConverter},ConverterParameter=0.10}"
                    Height="{Binding Width,RelativeSource={RelativeSource Self}}"/>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="PlayFrequency" Value="None">
                <Setter Property="Background" TargetName="PART_VOL" Value="LightGray"/>
            </Trigger>
            <Trigger Property="PlayFrequency" Value="EveryPass">
                <Setter Property="Background" TargetName="PART_BORDER" Value="{Binding SelectedBackgroundBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="PlayFrequency" Value="OddPassOnly">
                <Setter Property="Background" TargetName="PART_BORDER" Value="{Binding SelectedBackgroundBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Visibility" TargetName="PART_ODD" Value="Visible"/>
            </Trigger>
            <Trigger Property="PlayFrequency" Value="EvenPassOnly">
                <Setter Property="Background" TargetName="PART_BORDER" Value="{Binding SelectedBackgroundBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Visibility" TargetName="PART_EVEN" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsVolumeVisible" Value="True">
                <Setter Property="Visibility" TargetName="PART_VOL" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type con:TrackBox}">
        <Setter Property="Template" Value="{StaticResource TrackBoxHeaderControlTemplate}"/>
        <Style.Triggers>
            <Trigger Property="BoxType" Value="TrackStep">
                <Setter Property="Template" Value="{StaticResource TrackBoxStepControlTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ############################# -->
    <!-- ENVELOPE TEMPLATE / STYLE     -->
    <!-- ############################# -->
    
    
    
    
    <!-- ############################# -->
    <!-- ENVELOPE TEMPLATE / STYLE     -->
    <!-- ############################# -->
    <ControlTemplate x:Key="EnvelopeControlTemplate" TargetType="{x:Type con:EnvelopeControl}">
        <Grid x:Name="PART_HOST_GRID" ShowGridLines="True">
            <Border Height="2" BorderThickness="1" Margin="4,0" BorderBrush="Blue" />
        </Grid>
    </ControlTemplate>


    <Style TargetType="{x:Type con:EnvelopeControl}">
        <Setter Property="Template" Value="{StaticResource EnvelopeControlTemplate}"/>
    </Style>

    <!-- ############################# -->
    <!-- IMAGEBUTTON TEMPLATE / STYLE  -->
    <!-- ############################# -->
    <Style TargetType="{x:Type con:ImageButton}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type con:ImageButton}">
                    <StackPanel Orientation="Horizontal">
                        <Image 
                            Source="{Binding ImageSource, RelativeSource={RelativeSource AncestorType=con:ImageButton}}"
                            Height="{Binding ImageSize, RelativeSource={RelativeSource AncestorType=con:ImageButton}}"
                            Width="{Binding ImageSize, RelativeSource={RelativeSource AncestorType=con:ImageButton}}"/>

                        <TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType=con:ImageButton}}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>