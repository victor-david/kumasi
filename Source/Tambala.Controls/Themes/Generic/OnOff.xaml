<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:con="clr-namespace:Restless.App.Tambala.Controls">
    
    <!-- ##################### -->
    <!-- OnOff Template/Style  -->
    <!-- ##################### -->
    <ControlTemplate x:Key="OnOffMainControlTemplate" TargetType="con:OnOff">
        <!-- Transparent background allows hit testing everywhere; otherwise, can't click between text and the bar-->
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <!-- Left side text -->
            <TextBlock 
                Grid.Column="0"
                Margin="0,0,4,0"
                VerticalAlignment="Center"
                Foreground="{TemplateBinding OffTextBrush}"
                Text="{TemplateBinding OffText}"/>

            <!-- Connecting bar -->
            <Border 
                Grid.Column="1"
                Grid.ColumnSpan="3"
                Margin="2,0"
                Background="LightGray"
                Height="{TemplateBinding BarHeight}"
                Width="{TemplateBinding BarWidth}"
                CornerRadius="3"
                VerticalAlignment="Center">
            </Border>

            <!-- Left side circle. Displayed when IsChecked is false -->
            <Border
                Name="Border0"
                Grid.Column="1"
                Height="{TemplateBinding SelectorSize}"
                Width="{TemplateBinding SelectorSize}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="Left"
                Background="{TemplateBinding Background}"/>

            <!-- Right side circle. Displayed when IsChecked is true -->
            <Border
                Name="Border1"
                Grid.Column="3"
                Height="{TemplateBinding SelectorSize}"
                Width="{TemplateBinding SelectorSize}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="Right"
                Background="{TemplateBinding Foreground}"
                Visibility="Collapsed"/>

            <!-- Right side text -->
            <TextBlock
                Grid.Column="4"
                Margin="4,0,0,0"
                VerticalAlignment="Center"
                Foreground="{TemplateBinding OnTextBrush}"
                Text="{TemplateBinding OnText}"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border0" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Border1" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="Border0" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Border1" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <ControlTemplate x:Key="OnOffBoxControlTemplate" TargetType="con:OnOff">
        <!-- Transparent background allows hit testing everywhere; otherwise, can't click between text and the circle-->
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Border
                Name="Border0"
                Height="{TemplateBinding SelectorSize}"
                Width="{TemplateBinding SelectorSize}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{DynamicResource DefaultBorderBrush}"
                BorderThickness="1"
                Background="{TemplateBinding Background}"/>

            <Border
                Name="Border1"
                Height="{TemplateBinding SelectorSize}"
                Width="{TemplateBinding SelectorSize}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{DynamicResource DefaultBorderBrush}"
                BorderThickness="1"
                Background="{TemplateBinding Foreground}"
                Visibility="Collapsed"/>

            <TextBlock
                Grid.Column="1"
                Margin="4,0,0,0"
                VerticalAlignment="Center"
                Foreground="{TemplateBinding OnTextBrush}"
                Text="{TemplateBinding OnText}"/>

        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border0" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Border1" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="Border0" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Border1" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Border0" Property="Background" Value="#4000FF00"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>
    
    <Style TargetType="con:OnOff">
        <Setter Property="Template" Value="{StaticResource OnOffMainControlTemplate}"/>
        <Setter Property="Foreground" Value="#FF0060CE"/>
        <Setter Property="Background" Value="#FF0060CE"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsCheckBox" Value="True">
                <Setter Property="Foreground" Value="Green"/>
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Template" Value="{StaticResource OnOffBoxControlTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>